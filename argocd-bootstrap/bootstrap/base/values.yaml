argo-cd:
  dex:
    enabled: false
  server:
    extraArgs: []
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      ingressClassName: "nginx"
      hostname: argocd.xalt.team
      extraTls:
        - hosts:
            - argocd.xalt.team
          secretName: argocd-server-tls

  configs:
    rbac:
      policy.csv: |
        p,role:read,applications,get,prod/postgres-operator,deny
        p,role:read,applications,get,*/*,allow
        p,role:read,applications,update,*/*,deny
        p,role:read,applications,delete,*/*,deny
        g,argocd_admins,role:admin
        g,argocd_viewers,role:read
    cm:
      url: https://argocd.xalt.team
      oidc.config: |
        name: Keycloak
        issuer: https://sso.xalt.team/auth/realms/xalt
        clientID: argocd
        clientSecret: $oidc.keycloak.clientSecret
        requestedScopes: ["openid", "profile", "email", "groups"]
        requestedIDTokenClaims: {"roles": {"essential": true}}
        logoutURL: "https://sso.xalt.team/auth/realms/xalt/protocol/openid-connect/logout?redirect_uri=https%3A%2F%2Fargocd.xalt.team"

  repoServer:
    env:
      - name: HELM_PLUGINS
        value: /custom-tools/helm-plugins/
      - name: HELM_SECRETS_CURL_PATH
        value: /custom-tools/curl
      - name: HELM_SECRETS_SOPS_PATH
        value: /custom-tools/sops
      - name: HELM_SECRETS_VALS_PATH
        value: /custom-tools/vals
      - name: HELM_SECRETS_KUBECTL_PATH
        value: /custom-tools/kubectl
      - name: HELM_SECRETS_BACKEND
        value: sops
      # https://github.com/jkroepke/helm-secrets/wiki/Security-in-shared-environments
      - name: HELM_SECRETS_VALUES_ALLOW_SYMLINKS
        value: "false"
      - name: HELM_SECRETS_VALUES_ALLOW_ABSOLUTE_PATH
        value: "true"
      - name: HELM_SECRETS_VALUES_ALLOW_PATH_TRAVERSAL
        value: "false"
      - name: HELM_SECRETS_WRAPPER_ENABLED
        value: "true"
      - name: HELM_SECRETS_DECRYPT_SECRETS_IN_TMP_DIR
        value: "true"
      - name: HELM_SECRETS_HELM_PATH
        value: /usr/local/bin/helm
      - name: HELM_SECRETS_IGNORE_MISSING_VALUES
        value: "true"
    volumes:
      - name: custom-tools
        emptyDir: {}
    volumeMounts:
      - mountPath: /custom-tools
        name: custom-tools
    initContainers:
      - name: download-tools
        image: alpine:latest
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - -ec
        env:
          - name: KUBECTL_VERSION
            value: 1.34.1
          - name: VALS_VERSION
            value: 0.37.1
          - name: SOPS_VERSION
            value: 3.8.1
        args:
          - |
            mkdir -p /custom-tools/helm-plugins

            echo wget -qO /custom-tools/curl https://github.com/moparisthebest/static-curl/releases/latest/download/curl-amd64;
            wget -qO /custom-tools/curl https://github.com/moparisthebest/static-curl/releases/latest/download/curl-amd64;

            echo wget -qO /custom-tools/sops https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64;
            wget -qO /custom-tools/sops https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64;

            echo wget -qO /custom-tools/kubectl https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl;
            wget -qO /custom-tools/kubectl https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl;

            echo wget -qO- https://github.com/helmfile/vals/releases/download/v${VALS_VERSION}/vals_${VALS_VERSION}_linux_amd64.tar.gz ;
            wget -qO- https://github.com/helmfile/vals/releases/download/v${VALS_VERSION}/vals_${VALS_VERSION}_linux_amd64.tar.gz | tar -xzf- -C /custom-tools/ vals;
            chmod +x /custom-tools/*
        volumeMounts:
          - mountPath: /custom-tools
            name: custom-tools
